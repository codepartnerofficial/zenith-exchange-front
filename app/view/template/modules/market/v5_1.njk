<section class="v5-market-wrap">
  <style>
      .v5-market-wrap {
          width: 1232px;
          margin: 40px auto 0;
          position: relative;
          font-family: DINPro-Medium;
          transition: all 0.3s;
      }
      .v5-market-wrap .market-wrap {
        margin-left: -16px;
      }
      .v5-market-wrap .market-item {
          width: 100%;
          height: 72px;
          line-height: 72px;
          padding: 0 16px;
          display: flex;
          position: relative;
          box-sizing: border-box;
      }
      .v5-market-wrap .market-item .item-bg {
        opacity: 0;
        position: absolute;
        width: 100%;
        height: 100%;
        left: 0;
        top: 0;
        background: #F4F8FC;
        z-index: 0;
        transition: all 0.3s;
      }
      .v5-market-wrap .market-item:hover .item-bg {
        border-radius: 4px;
        opacity: 1;
      }
      .v5-market-wrap .market-item .market-info {
        display: flex;
        position: absolute;
        width: 1200px;
        left: 16px;
        top: 0;
        height: 72px;
        line-height: 72px;
        z-index: 1;
      }
      .v5-market-wrap .market-item .td-item {
          font-size: 20px;
      }
      .v5-market-wrap .market-item .td-item2 {
          width: 335px;
          padding-left: 0px;
          color: #aebacd;
      }
      .v5-market-wrap .market-item .td-item3 {
          width: 269px;
          color: #31363e;
      }
      .v5-market-wrap .market-item .td-item4 {
          width: 253px;
      }
      .v5-market-wrap .market-item .td-item-vol {
          width: 263px;
      }
      .v5-market-wrap .market-item .td-item-btn {
          width: 80px;
          font-size: 16px;
          text-align: right;
          position: relative;
      }
      .v5-market-wrap .market-item .td-item-btn button {
          border-radius: 4px;
          width: 76px;
          height: 40px;
          line-height: 40px;
          text-align: center;
          font-size: 14px;
          color: #fff;
          position: absolute;
          right: 0;
          top: 50%;
          transform: translateY(-50%);
      }
      .v5-market-wrap .market-item .b-cion {
          font-size: 20px;
          color: #31363e;
        }
        .v5-market-wrap .market-item .q-cion {
          font-size: 20px;
          color: #31363e;
          margin-right: 8px;
          font-family: DINPro-Regular;
      }
      .v5-market-wrap .market-item .symbol-icon {
          margin-right: 20px;
      }
      .v5-market-wrap .market-item .symbol-icon img {
          vertical-align: middle;
          width: 32px;
          height: 32px;
      }
      .v5-market-wrap .market-item.title-th {
          height: 55px;
          line-height: 55px;
          font-family: DINPro-Regular;
      }
      .v5-market-wrap .market-item.title-th .td-item {
          font-size: 12px;
          color: #aebacd;
      }
      .v5-market-wrap .market-item.title-th .td-item-vol {
          padding: 0;
      }
      .v5-market-wrap .more {
          height: 52px;
          line-height: 52px;
          text-align: center;
      }
      .v5-market-wrap .more span {
          font-size: 14px;
          cursor: pointer;
      }
      .v5-market-wrap .more .hoverShow {
        display: none;
      }
      .v5-market-wrap .more:hover .hoverHide {
        display: none;
      }
      .v5-market-wrap .more:hover .hoverShow {
        display: block;
      }
  </style>
  <ul class="market-ul market-wrap">
      <li class="market-item title-th">
          <div class="td-item td-item2 v5-7-cl">{{locale.home.market}}</div>
          <div class="td-item td-item3 v5-7-cl">{{locale.home.close}}</div>
          <div class="td-item td-item4 v5-7-cl">{{locale.home.applies}}</div>
          <div class="td-item td-item-vol v5-7-cl">{{locale.home.H_volume}}</div>
          <div class="td-item td-item-btn v5-7-cl">{{locale.h5Add.tradeList1}}</div>
      </li>
      {% for item in recommendMarket %}
      <li class="market-item market-content" data-coin="{{item}}">
        <div class="market-info">
          <div class="td-item td-item2">
              {% if helper.recommend.symbolIcon(item, coinList)%}
              <span class="symbol-icon">
                  <img src="{{helper.recommend.symbolIcon(item, coinList)}}" alt="">
              </span>
              {% endif %}
              <span class="b-cion v5-5-cl">{{helper.recommend.setSymbol(helper.recommend.getCoinShowName(item, symbolAll), 'q')}}</span>
              <span class="q-cion v5-6-cl">{{helper.recommend.setSymbol(helper.recommend.getCoinShowName(item, symbolAll), 'b')}}</span>
          </div>
          <div class="td-item td-item3 closePrice v5-5-cl"></div>
          <div class="td-item td-item4 percentage"></div>
          <div class="kline td-item td-item-vol v5-5-cl"></div>
          <div class="td-item td-item-btn">
              <button class="common-button common-button-solid v5-2-bg">
                  {{locale.home.trade}}
              </button>
          </div>
        </div>
        <div class="item-bg v5-14-bg"></div>
      </li>
      {% endfor %}
      <li class="more">
          <span class="hoverHide v5-6-cl">
            {{locale.home.moreMarket}}
            <svg aria-hidden="true" class="icon icon-12">
              <use xlink:href="#icon-v5_3"></use>
            </svg>
          </span>
          <span class="hoverShow v5-1-cl">
            {{locale.home.moreMarket}}
            <svg aria-hidden="true" class="icon icon-12">
              <use xlink:href="#icon-v5_3_h"></use>
            </svg>
          </span>
      </li>
  </ul>
  <script>
      (() => {
          const { myStorage, getScript } = window.BlockChainUtils;
          const websocketPath = "{{sourceMap.webSocket}}";
          if (!window.RecommendExtend){
              class RecommendExtend {
                  constructor() {
                    this.init();
                    this.bindMoreEvent();
                  }

                  init() {
                    this.$marketWrap = document.querySelector('.v5-market-wrap');
                    this.$marketList = Array.prototype.slice.call(this.$marketWrap.querySelectorAll('.market-content'));
                    this.domTree = {};
                    this.setDomTree();
                    window.emitter.emit('SWITCH-MARKET', 'USDT');
                    window.emitter.on('MARKET-DATA', (data) => {
                      this.setData(data);
                    })
                    setTimeout(() => {
                      this.$market = document.querySelector('.v5-market');
                      this.clientHeight =  document.documentElement.clientHeight;
                      this.setFade();
                      window.addEventListener('scroll', () => {
                        this.setFade();
                      })
                    }, 500)
                  }

                  setFade() {
                    const { scrollY } = window;
                    if (this.$market) {
                      const offset = this.$market.offsetTop;
                      if (offset < (this.clientHeight + scrollY - 50)) {
                        this.$market.classList.remove('effect-fade');
                      }
                    }
                  }

                  setDomTree() {
                    this.$marketList.forEach((item) => {
                      const { coin } = item.dataset;
                      if (coin) {
                        if (!this.domTree[coin]) {
                          this.domTree[coin] = {};
                        }
                        this.domTree[coin].closePrice = item.querySelector('.closePrice');
                        this.domTree[coin].percentage = item.querySelector('.percentage');
                        this.domTree[coin].vol = item.querySelector('.td-item-vol');
                        this.domTree[coin].btn = item.querySelector('.td-item-btn');
                        this.domTree[coin].btn.addEventListener('click', () => {
                          let symbol = coin;
                          if (coin) {
                            if (coin.indexOf('-c') > -1) {
                              symbol = coin.replace('-c', '');
                            }
                            myStorage.set('sSymbolName', symbol);
                            myStorage.set('markTitle', symbol.split('/')[1]);
                          }
                          const { symbolAll } = window.market;
                          let sSymbolShowName = symbol;
                          if (symbolAll[symbol] && symbolAll[symbol].showName) {
                            sSymbolShowName = symbolAll[symbol].showName;
                          }
                          window.location.href = `/trade/${sSymbolShowName.replace('/', '_')}`;
                        })
                      }
                    });
                  }

                  setData(data) {
                    data.forEach((item) => {
                      const symbol = item.showName;
                      if (this.domTree[symbol]) {
                        let classes = item.data[2][0].classes.join(' ');
                        if (classes) {
                          classes = classes.replace(/(\w+-\d+-bg)/, '');
                        }
                        this.domTree[symbol].closePrice.innerHTML = item.data[1][0].text;
                        // this.domTree[symbol].closePrice.className = `td-item td-item3 closePrice ${item.data[1][0].classes.join(' ')}`;
                        this.domTree[symbol].percentage.innerHTML = item.data[2][0].text;
                        this.domTree[symbol].percentage.className = `td-item td-item4 percentage ${classes}`;
                        this.domTree[symbol].vol.innerHTML = item.data[6][0].text;
                      }
                    })
                  }

                  bindMoreEvent(){
                      this.$marketWrap.querySelector('.more').addEventListener('click', () => {
                          window.location.href = '/trade';
                      }, false);
                  }
              }
              if (websocketPath && !window.selfSocket) {
                  getScript(`${window.staticDomain}/home/static/${websocketPath}`);
              }
              window.RecommendExtend = RecommendExtend;
              new RecommendExtend();
          }
          if (websocketPath && !window.selfSocket){
              window.selfSocket = true;
              getScript(`${window.staticDomain}/home/static/${websocketPath}`);
          }
      })();
  </script>
</section>
